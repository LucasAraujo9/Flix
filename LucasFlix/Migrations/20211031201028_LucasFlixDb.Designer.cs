// <auto-generated />
using System;
using LucasFlix;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LucasFlix.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211031201028_LucasFlixDb")]
    partial class LucasFlixDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LucasFlix.Models.Ator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeDoAtor");

                    b.HasKey("Id");

                    b.ToTable("Ator");
                });

            modelBuilder.Entity("LucasFlix.Models.Classificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificacaoDoFilme");

                    b.HasKey("Id");

                    b.ToTable("Classificacao");
                });

            modelBuilder.Entity("LucasFlix.Models.Diretor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeDoDiretor");

                    b.HasKey("Id");

                    b.ToTable("Diretor");
                });

            modelBuilder.Entity("LucasFlix.Models.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AtorId");

                    b.Property<int?>("ClassificacaoId");

                    b.Property<int?>("DiretorId");

                    b.Property<int?>("GeneroId");

                    b.Property<string>("NomeDoFilme");

                    b.HasKey("Id");

                    b.HasIndex("AtorId");

                    b.HasIndex("ClassificacaoId");

                    b.HasIndex("DiretorId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("LucasFlix.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GeneroDoFilme");

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("LucasFlix.Models.Serie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AtorId");

                    b.Property<int?>("ClassificacaoId");

                    b.Property<int?>("DiretorId");

                    b.Property<int?>("GeneroId");

                    b.Property<string>("NomeDaSerie");

                    b.HasKey("Id");

                    b.HasIndex("AtorId");

                    b.HasIndex("ClassificacaoId");

                    b.HasIndex("DiretorId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Serie");
                });

            modelBuilder.Entity("LucasFlix.Models.Filme", b =>
                {
                    b.HasOne("LucasFlix.Models.Ator", "Ator")
                        .WithMany("Filmes")
                        .HasForeignKey("AtorId");

                    b.HasOne("LucasFlix.Models.Classificacao", "Classificacao")
                        .WithMany("Filmes")
                        .HasForeignKey("ClassificacaoId");

                    b.HasOne("LucasFlix.Models.Diretor", "Diretor")
                        .WithMany("Filmes")
                        .HasForeignKey("DiretorId");

                    b.HasOne("LucasFlix.Models.Genero", "Genero")
                        .WithMany("Filmes")
                        .HasForeignKey("GeneroId");
                });

            modelBuilder.Entity("LucasFlix.Models.Serie", b =>
                {
                    b.HasOne("LucasFlix.Models.Ator", "Ator")
                        .WithMany("Series")
                        .HasForeignKey("AtorId");

                    b.HasOne("LucasFlix.Models.Classificacao", "Classificacao")
                        .WithMany("Series")
                        .HasForeignKey("ClassificacaoId");

                    b.HasOne("LucasFlix.Models.Diretor", "Diretor")
                        .WithMany("Series")
                        .HasForeignKey("DiretorId");

                    b.HasOne("LucasFlix.Models.Genero", "Genero")
                        .WithMany("Series")
                        .HasForeignKey("GeneroId");
                });
#pragma warning restore 612, 618
        }
    }
}
